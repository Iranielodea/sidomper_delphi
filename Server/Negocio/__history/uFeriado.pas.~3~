unit uFeriado;

interface

uses uDM, System.SysUtils, FireDAC.Stan.Param,

  Data.DB,
  FireDAC.Comp.Client, uEnumerador, Vcl.Dialogs, uCadastroInterface, uUsuario;

  const CConsulta: string =
    'SELECT Fer_Id, Fer_Data, Fer_Descricao FROM Feriado';

type
  TFeriado = class(TInterfacedObject, ICadastroInterface)
  public
    procedure Novo(Programa, IdUsuario: Integer);
    function Editar(Programa, IdUsuario: Integer): Boolean;
    procedure Excluir(Programa, IdUsuario, Id: Integer);
    function Filtrar(Campo, Texto, Ativo: string; Contem: Boolean = True): string;
    function FiltrarCodigo(Codigo: Integer): string;
    function LocalizarId(var Qry: TFDQuery; Id: integer): Boolean;
    procedure LocalizarCodigo(var Qry: TFDQuery; Codigo: integer);
    procedure Salvar(Programa, IdUsuario: Integer);
    function ProximoCodigo: Integer;
    procedure Relatorio(Programa, IdUsuario: Integer);
    function ProximoId: Integer;
  end;

implementation

{ TFeriado }

function TFeriado.Editar(Programa, IdUsuario: Integer): Boolean;
begin

end;

procedure TFeriado.Excluir(Programa, IdUsuario, Id: Integer);
begin

end;

function TFeriado.Filtrar(Campo, Texto, Ativo: string; Contem: Boolean): string;
begin

end;

function TFeriado.FiltrarCodigo(Codigo: Integer): string;
begin

end;

procedure TFeriado.LocalizarCodigo(var Qry: TFDQuery; Codigo: integer);
begin

end;

function TFeriado.LocalizarId(var Qry: TFDQuery; Id: integer): Boolean;
begin

end;

procedure TFeriado.Novo(Programa, IdUsuario: Integer);
var
  usuario: TUsuario;
begin
  usuario := TUsuario.Create;
  try
    usuario.PermissaoIncluir(Programa, IdUsuario);
  finally
    FreeAndNil(usuario);
  end;
end;

function TFeriado.ProximoCodigo: Integer;
begin

end;

function TFeriado.ProximoId: Integer;
begin

end;

procedure TFeriado.Relatorio(Programa, IdUsuario: Integer);
begin

end;

procedure TFeriado.Salvar(Programa, IdUsuario: Integer);
begin

end;

end.
